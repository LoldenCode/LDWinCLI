<#
    .SYNOPSIS
        Pull all online computers in domain's LLDP data and convert to rudimentary network diagram
    .DESCRIPTION
        Example document created for better understanding of the use of the Get-SwitchInfo tool
    .PARAMETER Computers
        An array of all of the FQDN or IP addresses of PCs on the network
        #Repeat for more than 1 parameter
    .NOTES
        Version:  1.0
        Author:  Alden Wilson
        Creation Date:  07-05-2023
        Last Update:  07-05-2023
    .EXAMPLE
        #Repeat for more than 1 example
#>
param (
    $Computers
)
<############
  Functions
############>

<############
  Variables
############>

<############
  Testing grounds
############>
<#
# Verify input
if ($Computers.count -gt 1) {
Write-Host "There are $($Computers.count) items input!"
}
elseif ($Computers.count -eq 1) {
    Write-Host "one value"
}
else {
    Write-Host $Computers.count
}
#>
<############
  Script
############>

#VerifyAccessible

[System.Collections.ArrayList]$invalidWorkstations =@()
[System.Collections.ArrayList]$WorkingComputers =@()
foreach ($Computer in $Computers) {
    Try {
        #New-CimSession ComputerName $Computer -ErrorAction Stop
        $WorkingComputers.Add($Computer) | out-null
    }
    Catch [Microsoft.Management.Infrastructure.CimException] {
        $invalidWorkstations.Add($Computer) | out-Null
        continue
    }
}



$result = (.\Get-SwitchInfo.ps1 -ComputerName $WorkingComputers)

<############
  Exports
############>
$parsed = $result | select-object Computer,PortDescription,@{name="IPAddress";Expression={$_.IPAddress}},ChassisID,Device,SystemDescription | ConvertTo-Csv -Delimiter ',' -NoTypeInformation
$parsed += $result | select-object @{Name="Computer";Expression={$_.Device}},'1','2','3','4','5' -unique | ConvertTo-Csv -Delimiter ',' -NoTypeInformation| Select-Object -Skip 1
$CSV = @"

##Network Diagram generated by PsDrawIO
# label: %Computer%
## style: shape=%shape%;fillColor=%fill%;strokeColor=%stroke%;verticalLabelPosition=bottom;aspect=fixed;
# style: label;image=%image%;whiteSpace=wrap;html=1;rounded=1;fillColor=%fill%;strokeColor=%stroke%;
# namespace: csvimport-
# connect: {"from": "Device", "to": "Computer", "invert": false, "fromlabel": "PortDescription", \
#          "style": "text=%PortDescription%;curved=1;endArrow=blockThin;endFill=1;fontSize=11;"}
# width: 40
# height: 40
# ignore: id,shape,fill,stroke,refs
# nodespacing: 20
# levelspacing: 20
# edgespacing: 20
# layout: horizontalflow
## CSV data starts below this line
"@

return $CSV, $parsed